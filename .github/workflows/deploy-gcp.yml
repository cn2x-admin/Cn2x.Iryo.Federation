
name: Deploy Apollo Gateway to Cloud Run

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  SERVICE_NAME: "cn2x-iryo-app"
  GCP_REGION: "us-west2"

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test || echo "No tests configured"

      - name: Run linting (if configured)
        run: npm run lint || echo "No linting configured"

  build-and-deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    environment: PRD
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Extract Project ID from Service Account
        run: |
          PROJECT_ID=$(echo '${{ secrets.GCP_SA_KEY }}' | jq -r '.project_id')
          echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV
          echo "Using GCP Project ID: $PROJECT_ID"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Docker for GCR 
        run: |
          gcloud auth configure-docker gcr.io

      - name: Build Docker image
        run: |
          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .

      - name: Push Docker image to GCR
        run: |
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        id: deploy
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ env.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 4000 \
            --memory 512Mi \
            --cpu 1 \
            --timeout 300 \
            --concurrency 100 \
            --max-instances 10 \
            --set-env-vars="NODE_ENV=production"
          
      - name: Get Service URL
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region=${{ env.GCP_REGION }} --format='value(status.url)')
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV
          echo "🚀 Apollo Gateway deployed at: $SERVICE_URL"

  notify-success:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: success()
    steps:
      - name: Success Notification
        run: |
          echo "✅ Deployment successful!"
          echo "🚀 Apollo Federation Gateway is now live!"
          echo "📊 Service: ${{ env.SERVICE_NAME }}"
          echo "🌍 Region: ${{ env.GCP_REGION }}"

  notify-failure:
    name: Notify Failure
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: failure()
    steps:
      - name: Failure Notification
        run: |
          echo "❌ Deployment failed!"
          echo "🔍 Check the logs above for details"
          echo "📋 Service: ${{ env.SERVICE_NAME }}"
