
name: CI & Deploy Backend

on:
  push:
    branches: [main]

env:
  SERVICE_NAME: "cn2x-iryo-app"

jobs:
  build:
    runs-on: ubuntu-latest
    environment: PRD
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci || npm install

      - name: Run tests
        run: npm test --silent || echo "No tests found"

      - name: Build (if needed)
        run: npm run build || echo "No build step"

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Extract Project ID from Service Account
        run: |
          PROJECT_ID=$(echo '${{ secrets.GCP_SA_KEY }}' | jq -r '.project_id')
          echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV
          echo "Using GCP Project ID: $PROJECT_ID"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true

      - name: Create Artifact Registry repository (if not exists)
        run: |
          gcloud artifacts repositories create cn2x-iryo-repo \
            --repository-format=docker \
            --location=us \
            --description="Docker repository for cn2x-iryo-app" || echo "Repository already exists"

      - name: Grant permissions to service account
        run: |
          SERVICE_ACCOUNT="cn2x-github-action@${{ env.PROJECT_ID }}.iam.gserviceaccount.com"
          
          # Artifact Registry Writer
          gcloud projects add-iam-policy-binding ${{ env.PROJECT_ID }} \
            --member="serviceAccount:$SERVICE_ACCOUNT" \
            --role="roles/artifactregistry.writer" || echo "Permission already exists"
          
          # Cloud Run Developer
          gcloud projects add-iam-policy-binding ${{ env.PROJECT_ID }} \
            --member="serviceAccount:$SERVICE_ACCOUNT" \
            --role="roles/run.developer" || echo "Permission already exists"
          
          # Service Account User
          gcloud projects add-iam-policy-binding ${{ env.PROJECT_ID }} \
            --member="serviceAccount:$SERVICE_ACCOUNT" \
            --role="roles/iam.serviceAccountUser" || echo "Permission already exists"

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker us-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build -t us-docker.pkg.dev/${{ env.PROJECT_ID }}/cn2x-iryo-repo/${{ env.SERVICE_NAME }}:${{ github.sha }} .

      - name: Verify permissions before push
        run: |
          echo "Checking current authentication..."
          gcloud auth list
          echo "Current project: $(gcloud config get-value project)"
          echo "Testing Artifact Registry access..."
          gcloud artifacts repositories list --location=us || echo "Could not list repositories"

      - name: Push Docker image to Artifact Registry
        run: |
          docker push us-docker.pkg.dev/${{ env.PROJECT_ID }}/cn2x-iryo-repo/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image us-docker.pkg.dev/${{ env.PROJECT_ID }}/cn2x-iryo-repo/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated
